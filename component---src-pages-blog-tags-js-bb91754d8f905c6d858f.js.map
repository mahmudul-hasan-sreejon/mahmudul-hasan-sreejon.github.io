{"version":3,"sources":["webpack:///./src/pages/blog/tags.js"],"names":["StyledTagsContainer","styled","main","TagsPage","group","data","allMarkdownRemark","location","title","className","to","map","tag","key","fieldValue","kebabCase","totalCount","pageQuery"],"mappings":"2FAAA,+IAQMA,EAAsBC,IAAOC,KAAV,gFAAGD,CAAH,+MAoEVE,UA3CE,SAAC,GAAD,IAAgCC,EAAhC,EAAGC,KAAQC,kBAAqBF,MAAWG,EAA3C,EAA2CA,SAA3C,OAChB,kBAAC,IAAD,CAAQA,SAAUA,GACjB,kBAAC,IAAD,CAAQC,MAAM,SAEd,kBAACR,EAAD,KACC,0BAAMS,UAAU,cACf,0BAAMA,UAAU,SAAhB,KACA,kBAAC,OAAD,CAAMC,GAAG,SAAT,cAGD,oCACA,wBAAID,UAAU,cACZL,EAAMO,KAAI,SAACC,GAAD,OACV,wBAAIC,IAAKD,EAAIE,YACZ,kBAAC,OAAD,CAAMJ,GAAE,cAAgBK,IAAUH,EAAIE,YAA9B,IAA8CL,UAAU,eAC9DG,EAAIE,WADN,IACkB,0BAAML,UAAU,SAAhB,IAA0BG,EAAII,WAA9B,cA8BjB,IAAMC,EAAS","file":"component---src-pages-blog-tags-js-bb91754d8f905c6d858f.js","sourcesContent":["import React from 'react';\r\nimport { Link, graphql } from 'gatsby';\r\nimport kebabCase from 'lodash/kebabCase';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\nimport styled from 'styled-components';\r\nimport { Layout } from '@components';\r\n\r\nconst StyledTagsContainer = styled.main`\r\n\tmax-width: 1000px;\r\n\r\n\th1 {\r\n\t\tmargin-bottom: 50px;\r\n\t}\r\n\tul {\r\n\t\tcolor: var(--text-light);\r\n\r\n\t\tli {\r\n\t\t\tfont-size: var(--fz-xxl);\r\n\r\n\t\t\ta {\r\n\t\t\t\tcolor: var(--text-light);\r\n\r\n\t\t\t\t.count {\r\n\t\t\t\t\tcolor: var(--text);\r\n\t\t\t\t\tfont-family: var(--font-mono);\r\n\t\t\t\t\tfont-size: var(--fz-md);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst TagsPage = ({ data: { allMarkdownRemark: { group } }, location }) => (\r\n\t<Layout location={location}>\r\n\t\t<Helmet title=\"Tags\" />\r\n\r\n\t\t<StyledTagsContainer>\r\n\t\t\t<span className=\"breadcrumb\">\r\n\t\t\t\t<span className=\"arrow\">&larr;</span>\r\n\t\t\t\t<Link to=\"/blog\">All posts</Link>\r\n\t\t\t</span>\r\n\r\n\t\t\t<h1>Tags</h1>\r\n\t\t\t<ul className=\"fancy-list\">\r\n\t\t\t\t{group.map((tag) => (\r\n\t\t\t\t\t<li key={tag.fieldValue}>\r\n\t\t\t\t\t\t<Link to={`/blog/tags/${kebabCase(tag.fieldValue)}/`} className=\"inline-link\">\r\n\t\t\t\t\t\t\t{tag.fieldValue} <span className=\"count\">({tag.totalCount})</span>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</StyledTagsContainer>\r\n\t</Layout>\r\n);\r\n\r\nTagsPage.propTypes = {\r\n\tdata: PropTypes.shape({\r\n\t\tallMarkdownRemark: PropTypes.shape({\r\n\t\t\tgroup: PropTypes.arrayOf(\r\n\t\t\t\tPropTypes.shape({\r\n\t\t\t\t\tfieldValue: PropTypes.string.isRequired,\r\n\t\t\t\t\ttotalCount: PropTypes.number.isRequired\r\n\t\t\t\t}).isRequired\r\n\t\t\t)\r\n\t\t}),\r\n\t\tsite: PropTypes.shape({\r\n\t\t\tsiteMetadata: PropTypes.shape({\r\n\t\t\t\ttitle: PropTypes.string.isRequired\r\n\t\t\t})\r\n\t\t})\r\n\t}),\r\n\tlocation: PropTypes.object\r\n};\r\n\r\nexport default TagsPage;\r\n\r\nexport const pageQuery = graphql`\r\n\tquery {\r\n\t\tallMarkdownRemark(limit: 2000, filter: { frontmatter: { draft: { ne: true } } }) {\r\n\t\t\tgroup(field: frontmatter___tags) {\r\n\t\t\t\tfieldValue\r\n\t\t\t\ttotalCount\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n"],"sourceRoot":""}