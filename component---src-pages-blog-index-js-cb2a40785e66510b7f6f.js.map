{"version":3,"sources":["webpack:///./src/pages/blog/index.js"],"names":["StyledMainContainer","styled","main","theme","mixins","flexBetween","StyledGrid","div","StyledPostInner","boxShadow","StyledPost","StyledPostHeader","StyledFolder","StyledPostName","h5","StyledPostDescription","StyledDate","span","StyledTags","ul","BlogPage","location","posts","data","allMarkdownRemark","edges","title","className","length","map","i","frontmatter","node","description","slug","date","tags","d","Date","key","tabIndex","to","toLocaleDateString","tag","kebabCase","pageQuery"],"mappings":"2FAAA,2JASMA,EAAsBC,IAAOC,KAAV,4EAAGD,CAAH,+FAOrB,qBAAGE,MAAkBC,OAAOC,eAK1BC,EAAaL,IAAOM,IAAV,mEAAGN,CAAH,0NAcVO,EAAkBP,IAAOM,IAAV,wEAAGN,CAAH,4OAClB,qBAAGE,MAAkBC,OAAOK,aAC5B,qBAAGN,MAAkBC,OAAOC,eAezBK,EAAaT,IAAOM,IAAV,mEAAGN,CAAH,4GAOZO,GAKEG,EAAmBV,IAAOM,IAAV,yEAAGN,CAAH,6BACnB,qBAAGE,MAAkBC,OAAOC,eAGzBO,EAAeX,IAAOM,IAAV,qEAAGN,CAAH,sDAOZY,EAAiBZ,IAAOa,GAAV,uEAAGb,CAAH,yEAKdc,EAAwBd,IAAOM,IAAV,8EAAGN,CAAH,6CAIrBe,EAAaf,IAAOgB,KAAV,mEAAGhB,CAAH,4GAMViB,EAAajB,IAAOkB,GAAV,mEAAGlB,CAAH,gOAqFDmB,UAjEE,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SACbC,EADkC,EAAXC,KACVC,kBAAkBC,MAErC,OACC,kBAAC,IAAD,CAAQJ,SAAUA,GACjB,kBAAC,IAAD,CAAQK,MAAM,SAEd,kBAAC1B,EAAD,KACC,gCACC,wBAAI2B,UAAU,eAAd,SAGD,kBAACrB,EAAD,KACC,yBAAKqB,UAAU,SACbL,EAAMM,OAAS,GACfN,EAAMO,KAAI,WAAWC,GAAO,IACnBC,EADkB,EAAdC,KACJD,YACAL,EAAyCK,EAAzCL,MAAOO,EAAkCF,EAAlCE,YAAaC,EAAqBH,EAArBG,KAAMC,EAAeJ,EAAfI,KAAMC,EAASL,EAATK,KAClCC,EAAI,IAAIC,KAAKH,GAEnB,OACC,kBAACzB,EAAD,CAAY6B,IAAKT,EAAGU,SAAS,KAC5B,kBAAChC,EAAD,KACC,gCACC,kBAAC,OAAD,CAAMiC,GAAIP,GACT,kBAACvB,EAAD,KACC,kBAACC,EAAD,KACC,kBAAC,IAAD,QAGF,kBAACC,EAAD,KAAiBa,GACjB,kBAACX,EAAD,KAAwBkB,KAG1B,gCACC,kBAACjB,EAAD,QAAgBqB,EAAEK,sBAClB,kBAACxB,EAAD,KACEkB,EAAKP,KAAI,SAACc,EAAKb,GAAN,OACT,wBAAIS,IAAKT,GACR,kBAAC,OAAD,CACCW,GAAE,cAAgBG,IAAUD,GAA1B,IACFhB,UAAU,eAFX,IAIGgB,mBAwBX,IAAME,EAAS","file":"component---src-pages-blog-index-js-cb2a40785e66510b7f6f.js","sourcesContent":["import React from 'react';\r\nimport { graphql, Link } from 'gatsby';\r\nimport kebabCase from 'lodash/kebabCase';\r\nimport PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet';\r\nimport styled from 'styled-components';\r\nimport { Layout } from '@components';\r\nimport { IconZap } from '@components/icons';\r\n\r\nconst StyledMainContainer = styled.main`\r\n\t& > header {\r\n\t\tmargin-bottom: 100px;\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\tfooter {\r\n\t\t${({ theme }) => theme.mixins.flexBetween};\r\n\t\twidth: 100%;\r\n\t\tmargin-top: 20px;\r\n\t}\r\n`;\r\nconst StyledGrid = styled.div`\r\n\tmargin-top: 50px;\r\n\r\n\t.posts {\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n\t\tgrid-gap: 15px;\r\n\t\tposition: relative;\r\n\r\n\t\t@media (max-width: 1080px) {\r\n\t\t\tgrid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n\t\t}\r\n\t}\r\n`;\r\nconst StyledPostInner = styled.div`\r\n\t${({ theme }) => theme.mixins.boxShadow};\r\n\t${({ theme }) => theme.mixins.flexBetween};\r\n\tflex-direction: column;\r\n\talign-items: flex-start;\r\n\tposition: relative;\r\n\theight: 100%;\r\n\tpadding: 2rem 1.75rem;\r\n\tborder-radius: var(--border-radius);\r\n\ttransition: var(--transition);\r\n\tbackground-color: var(--background-light);\r\n\r\n\theader,\r\n\ta {\r\n\t\twidth: 100%;\r\n\t}\r\n`;\r\nconst StyledPost = styled.div`\r\n\ttransition: var(--transition);\r\n\tcursor: default;\r\n\r\n\t&:hover,\r\n\t&:focus {\r\n\t\toutline: 0;\r\n\t\t${StyledPostInner} {\r\n\t\t\ttransform: translateY(-5px);\r\n\t\t}\r\n\t}\r\n`;\r\nconst StyledPostHeader = styled.div`\r\n\t${({ theme }) => theme.mixins.flexBetween};\r\n\tmargin-bottom: 30px;\r\n`;\r\nconst StyledFolder = styled.div`\r\n\tcolor: var(--accent);\r\n\tsvg {\r\n\t\twidth: 40px;\r\n\t\theight: 40px;\r\n\t}\r\n`;\r\nconst StyledPostName = styled.h5`\r\n\tmargin: 0 0 10px;\r\n\tcolor: var(--text-lightest);\r\n\tfont-size: var(--fz-xxl);\r\n`;\r\nconst StyledPostDescription = styled.div`\r\n\tcolor: var(--text-light);\r\n\tfont-size: 17px;\r\n`;\r\nconst StyledDate = styled.span`\r\n\tcolor: var(--text-light);\r\n\tfont-family: var(--font-mono);\r\n\tfont-size: var(--fz-xxs);\r\n\ttext-transform: uppercase;\r\n`;\r\nconst StyledTags = styled.ul`\r\n\tdisplay: flex;\r\n\talign-items: flex-end;\r\n\tflex-wrap: wrap;\r\n\tpadding: 0;\r\n\tmargin: 0;\r\n\tlist-style: none;\r\n\r\n\tli {\r\n\t\tcolor: var(--accent);\r\n\t\tfont-family: var(--font-mono);\r\n\t\tfont-size: var(--fz-xxs);\r\n\t\tline-height: 1.75;\r\n\r\n\t\t&:not(:last-of-type) {\r\n\t\t\tmargin-right: 15px;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst BlogPage = ({ location, data }) => {\r\n\tconst posts = data.allMarkdownRemark.edges;\r\n\r\n\treturn (\r\n\t\t<Layout location={location}>\r\n\t\t\t<Helmet title=\"Blog\" />\r\n\r\n\t\t\t<StyledMainContainer>\r\n\t\t\t\t<header>\r\n\t\t\t\t\t<h1 className=\"big-heading\">Blog</h1>\r\n\t\t\t\t</header>\r\n\r\n\t\t\t\t<StyledGrid>\r\n\t\t\t\t\t<div className=\"posts\">\r\n\t\t\t\t\t\t{posts.length > 0 &&\r\n\t\t\t\t\t\t\tposts.map(({ node }, i) => {\r\n\t\t\t\t\t\t\t\tconst { frontmatter } = node;\r\n\t\t\t\t\t\t\t\tconst { title, description, slug, date, tags } = frontmatter;\r\n\t\t\t\t\t\t\t\tconst d = new Date(date);\r\n\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<StyledPost key={i} tabIndex=\"0\">\r\n\t\t\t\t\t\t\t\t\t\t<StyledPostInner>\r\n\t\t\t\t\t\t\t\t\t\t\t<header>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Link to={slug}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<StyledPostHeader>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<StyledFolder>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<IconZap />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</StyledFolder>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</StyledPostHeader>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<StyledPostName>{title}</StyledPostName>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<StyledPostDescription>{description}</StyledPostDescription>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t</header>\r\n\t\t\t\t\t\t\t\t\t\t\t<footer>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledDate>{`${d.toLocaleDateString()}`}</StyledDate>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<StyledTags>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{tags.map((tag, i) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<li key={i}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/blog/tags/${kebabCase(tag)}/`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"inline-link\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t#{tag}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</StyledTags>\r\n\t\t\t\t\t\t\t\t\t\t\t</footer>\r\n\t\t\t\t\t\t\t\t\t\t</StyledPostInner>\r\n\t\t\t\t\t\t\t\t\t</StyledPost>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</StyledGrid>\r\n\t\t\t</StyledMainContainer>\r\n\t\t</Layout>\r\n\t);\r\n};\r\n\r\nBlogPage.propTypes = {\r\n\tlocation: PropTypes.object.isRequired,\r\n\tdata: PropTypes.object.isRequired\r\n};\r\n\r\nexport default BlogPage;\r\n\r\nexport const pageQuery = graphql`\r\n\t{\r\n\t\tallMarkdownRemark(\r\n\t\t\tfilter: { fileAbsolutePath: { regex: \"/posts/\" }, frontmatter: { draft: { ne: true } } }\r\n\t\t\tsort: { fields: [frontmatter___date], order: DESC }\r\n\t\t) {\r\n\t\t\tedges {\r\n\t\t\t\tnode {\r\n\t\t\t\t\tfrontmatter {\r\n\t\t\t\t\t\ttitle\r\n\t\t\t\t\t\tdescription\r\n\t\t\t\t\t\tslug\r\n\t\t\t\t\t\tdate\r\n\t\t\t\t\t\ttags\r\n\t\t\t\t\t\tdraft\r\n\t\t\t\t\t}\r\n\t\t\t\t\thtml\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n"],"sourceRoot":""}